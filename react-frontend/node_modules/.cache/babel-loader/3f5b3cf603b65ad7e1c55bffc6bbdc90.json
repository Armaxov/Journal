{"ast":null,"code":"import axios from 'axios';\nimport AuthenticationService from './AuthenticationService';\nconst API_URL = \"http://localhost:8080/api/users\";\n\nclass UserService {\n  getUsernameList() {\n    return axios.get(API_URL + \"/usernames\", AuthenticationService.getConfig());\n  }\n\n  getIdByUsername(username) {\n    return axios.get(API_URL + \"/usernames/\" + username, AuthenticationService.getConfig());\n  }\n\n  createUser(user, role) {\n    console.log(user + \" \" + role);\n    return axios.post(API_URL, user, role, AuthenticationService.getConfig());\n  }\n\n  removeUser(username) {\n    return axios.delete(API_URL + \"/usernames/\" + username, AuthenticationService.getConfig());\n  }\n\n  getRoles() {\n    return axios.get(API_URL + \"/roles\", AuthenticationService.getConfig());\n  }\n\n  getRoleById(userId) {\n    return axios.get(API_URL + \"/roles/\" + userId, AuthenticationService.getConfig());\n  }\n\n  async getCurrentUserRole() {\n    let username = '';\n    let getUsername = await AuthenticationService.getUsernameByToken();\n    username = getUsername.data;\n    let getId = await this.getIdByUsername(username);\n    return axios.get(API_URL + \"/roles/\" + getId.data, AuthenticationService.getConfig());\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/Arslan/eclipse-workspace/Journal/react-frontend/src/services/UserService.js"],"names":["axios","AuthenticationService","API_URL","UserService","getUsernameList","get","getConfig","getIdByUsername","username","createUser","user","role","console","log","post","removeUser","delete","getRoles","getRoleById","userId","getCurrentUserRole","getUsername","getUsernameByToken","data","getId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAiB;AAEbC,EAAAA,eAAe,GAAE;AACb,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,YAApB,EAAkCD,qBAAqB,CAACK,SAAtB,EAAlC,CAAP;AACH;;AAEDC,EAAAA,eAAe,CAACC,QAAD,EAAU;AACrB,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,aAAV,GAA0BM,QAApC,EAA8CP,qBAAqB,CAACK,SAAtB,EAA9C,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACC,IAAD,EAAOC,IAAP,EAAY;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,GAAG,GAAP,GAAaC,IAAzB;AACA,WAAOX,KAAK,CAACc,IAAN,CAAWZ,OAAX,EAAoBQ,IAApB,EAA0BC,IAA1B,EAAgCV,qBAAqB,CAACK,SAAtB,EAAhC,CAAP;AACH;;AAEDS,EAAAA,UAAU,CAACP,QAAD,EAAU;AAChB,WAAOR,KAAK,CAACgB,MAAN,CAAad,OAAO,GAAG,aAAV,GAA0BM,QAAvC,EAAiDP,qBAAqB,CAACK,SAAtB,EAAjD,CAAP;AACH;;AAEDW,EAAAA,QAAQ,GAAE;AACN,WAAOjB,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,QAApB,EAA8BD,qBAAqB,CAACK,SAAtB,EAA9B,CAAP;AACH;;AAEDY,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,WAAOnB,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,SAAV,GAAsBiB,MAAhC,EAAwClB,qBAAqB,CAACK,SAAtB,EAAxC,CAAP;AACH;;AAEuB,QAAlBc,kBAAkB,GAAE;AACtB,QAAIZ,QAAQ,GAAG,EAAf;AACA,QAAIa,WAAW,GAAG,MAAMpB,qBAAqB,CAACqB,kBAAtB,EAAxB;AACAd,IAAAA,QAAQ,GAAGa,WAAW,CAACE,IAAvB;AACA,QAAIC,KAAK,GAAG,MAAM,KAAKjB,eAAL,CAAqBC,QAArB,CAAlB;AACA,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,SAAV,GAAsBsB,KAAK,CAACD,IAAtC,EAA4CtB,qBAAqB,CAACK,SAAtB,EAA5C,CAAP;AACH;;AAjCY;;AAoCjB,eAAe,IAAIH,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst API_URL = \"http://localhost:8080/api/users\";\r\n\r\nclass UserService{\r\n    \r\n    getUsernameList(){\r\n        return axios.get(API_URL + \"/usernames\", AuthenticationService.getConfig());\r\n    }\r\n\r\n    getIdByUsername(username){\r\n        return axios.get(API_URL + \"/usernames/\" + username, AuthenticationService.getConfig());\r\n    }\r\n\r\n    createUser(user, role){\r\n        console.log(user + \" \" + role);\r\n        return axios.post(API_URL, user, role, AuthenticationService.getConfig());\r\n    }\r\n\r\n    removeUser(username){\r\n        return axios.delete(API_URL + \"/usernames/\" + username, AuthenticationService.getConfig());\r\n    }\r\n\r\n    getRoles(){\r\n        return axios.get(API_URL + \"/roles\", AuthenticationService.getConfig());\r\n    }\r\n\r\n    getRoleById(userId){\r\n        return axios.get(API_URL + \"/roles/\" + userId, AuthenticationService.getConfig());\r\n    }\r\n\r\n    async getCurrentUserRole(){\r\n        let username = '';\r\n        let getUsername = await AuthenticationService.getUsernameByToken();\r\n        username = getUsername.data;\r\n        let getId = await this.getIdByUsername(username);\r\n        return axios.get(API_URL + \"/roles/\" + getId.data, AuthenticationService.getConfig());\r\n    }\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}