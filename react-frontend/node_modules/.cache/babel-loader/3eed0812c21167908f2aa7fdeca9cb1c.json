{"ast":null,"code":"import axios from 'axios';\nimport AuthenticationService from './AuthenticationService';\nconst GROUP_API_BASE_URL = \"http://localhost:8080/api/groups\";\n\nclass GroupService {\n  getGroups() {\n    return axios.get(GROUP_API_BASE_URL, AuthenticationService.getConfig());\n  }\n\n  getGroupById(groupId) {\n    let currentGroup = '';\n    this.state.groups.forEach(group => {\n      if (group.id == groupId) {\n        currentGroup = group;\n      }\n    });\n    return currentGroup;\n  }\n\n  createGroup(group) {\n    return axios.post(GROUP_API_BASE_URL, group, AuthenticationService.getConfig());\n  }\n\n  updateGroup(group, groupId) {\n    return axios.put(GROUP_API_BASE_URL + \"/\" + groupId, group, AuthenticationService.getConfig());\n  }\n\n  deleteGroup(groupId) {\n    return axios.delete(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig());\n  }\n\n  getGroupByName(name) {\n    let groupList = this.getGroups();\n    groupList.map(group => {\n      if (group.groupName === name) return group;\n      return '';\n    });\n  }\n\n}\n\nexport default new GroupService();","map":{"version":3,"sources":["C:/Users/Arslan/eclipse-workspace/Journal/react-frontend/src/services/GroupService.js"],"names":["axios","AuthenticationService","GROUP_API_BASE_URL","GroupService","getGroups","get","getConfig","getGroupById","groupId","currentGroup","state","groups","forEach","group","id","createGroup","post","updateGroup","put","deleteGroup","delete","getGroupByName","name","groupList","map","groupName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,MAAMC,kBAAkB,GAAG,kCAA3B;;AAGA,MAAMC,YAAN,CAAkB;AACdC,EAAAA,SAAS,GAAE;AACP,WAAOJ,KAAK,CAACK,GAAN,CAAUH,kBAAV,EAA8BD,qBAAqB,CAACK,SAAtB,EAA9B,CAAP;AACH;;AAEDC,EAAAA,YAAY,CAACC,OAAD,EAAS;AACjB,QAAIC,YAAY,GAAG,EAAnB;AACA,SAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,CAA2BC,KAAD,IAAW;AACjC,UAAGA,KAAK,CAACC,EAAN,IAAYN,OAAf,EAAuB;AACnBC,QAAAA,YAAY,GAAGI,KAAf;AACH;AACJ,KAJD;AAKA,WAAOJ,YAAP;AACH;;AAEDM,EAAAA,WAAW,CAACF,KAAD,EAAO;AACd,WAAOb,KAAK,CAACgB,IAAN,CAAWd,kBAAX,EAA+BW,KAA/B,EAAsCZ,qBAAqB,CAACK,SAAtB,EAAtC,CAAP;AACH;;AAEDW,EAAAA,WAAW,CAACJ,KAAD,EAAQL,OAAR,EAAgB;AACvB,WAAOR,KAAK,CAACkB,GAAN,CAAUhB,kBAAkB,GAAG,GAArB,GAA2BM,OAArC,EAA8CK,KAA9C,EAAqDZ,qBAAqB,CAACK,SAAtB,EAArD,CAAP;AACH;;AAEDa,EAAAA,WAAW,CAACX,OAAD,EAAS;AAChB,WAAOR,KAAK,CAACoB,MAAN,CAAalB,kBAAkB,GAAG,GAArB,GAA2BM,OAAxC,EAAiDP,qBAAqB,CAACK,SAAtB,EAAjD,CAAP;AACH;;AAEDe,EAAAA,cAAc,CAACC,IAAD,EAAM;AAChB,QAAIC,SAAS,GAAG,KAAKnB,SAAL,EAAhB;AACAmB,IAAAA,SAAS,CAACC,GAAV,CAAcX,KAAK,IAAI;AACnB,UAAGA,KAAK,CAACY,SAAN,KAAoBH,IAAvB,EACI,OAAOT,KAAP;AACJ,aAAO,EAAP;AACH,KAJD;AAKH;;AAlCa;;AAqClB,eAAe,IAAIV,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst GROUP_API_BASE_URL = \"http://localhost:8080/api/groups\"\r\n\r\n\r\nclass GroupService{\r\n    getGroups(){\r\n        return axios.get(GROUP_API_BASE_URL, AuthenticationService.getConfig());\r\n    }\r\n\r\n    getGroupById(groupId){\r\n        let currentGroup = '';\r\n        this.state.groups.forEach((group) => {\r\n            if(group.id == groupId){\r\n                currentGroup = group;\r\n            }\r\n        });\r\n        return currentGroup;\r\n    }\r\n\r\n    createGroup(group){\r\n        return axios.post(GROUP_API_BASE_URL, group, AuthenticationService.getConfig());\r\n    }\r\n\r\n    updateGroup(group, groupId){\r\n        return axios.put(GROUP_API_BASE_URL + \"/\" + groupId, group, AuthenticationService.getConfig());\r\n    }\r\n\r\n    deleteGroup(groupId){\r\n        return axios.delete(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig());\r\n    }\r\n    \r\n    getGroupByName(name){\r\n        let groupList = this.getGroups();\r\n        groupList.map(group => {\r\n            if(group.groupName === name)\r\n                return group;\r\n            return '';\r\n        })\r\n    }\r\n}\r\n\r\nexport default new GroupService();"]},"metadata":{},"sourceType":"module"}