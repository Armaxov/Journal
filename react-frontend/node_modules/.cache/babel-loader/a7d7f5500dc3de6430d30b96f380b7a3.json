{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/authenticate';\nlet config = {\n  headers: {\n    'Authorization': 'Bearer '\n  }\n};\n\nclass AuthenticationService {\n  login(username, password) {\n    axios.post(API_URL, {\n      username: username,\n      password: password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  logout() {}\n\n  getConfig() {\n    return config;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/Arslan/eclipse-workspace/Journal/react-frontend/src/services/AuthenticationService.js"],"names":["axios","API_URL","config","headers","AuthenticationService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","getConfig"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,oCAAhB;AAGA,IAAIC,MAAM,GAAG;AACTC,EAAAA,OAAO,EAAE;AACP,qBAAiB;AADV;AADA,CAAb;;AAMA,MAAMC,qBAAN,CAA2B;AAIvBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrBP,IAAAA,KAAK,CAACQ,IAAN,CAAWP,OAAX,EAAoB;AAChBK,MAAAA,QAAQ,EAAEA,QADM;AAEhBC,MAAAA,QAAQ,EAAEA;AAFM,KAApB,EAGGE,IAHH,CAGQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC7BC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACD;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACD,KATH;AAUH;;AAEDM,EAAAA,MAAM,GAAE,CAEP;;AAGDC,EAAAA,SAAS,GAAE;AACP,WAAOhB,MAAP;AACH;;AAxBsB;;AA2B3B,eAAe,IAAIE,qBAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/authenticate'\r\n\r\n\r\nlet config = {\r\n    headers: {\r\n      'Authorization': 'Bearer '\r\n    }\r\n  }\r\n\r\nclass AuthenticationService{\r\n\r\n    \r\n\r\n    login(username, password){\r\n        axios.post(API_URL, {\r\n            username: username,\r\n            password: password\r\n        }).then(response => {\r\n            if (response.data.accessToken) {\r\n              localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n            }\r\n    \r\n            return response.data;\r\n          });\r\n    }\r\n\r\n    logout(){\r\n        \r\n    }\r\n\r\n\r\n    getConfig(){\r\n        return config;\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();"]},"metadata":{},"sourceType":"module"}