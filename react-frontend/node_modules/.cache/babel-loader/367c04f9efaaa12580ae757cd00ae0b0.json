{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/authenticate';\n\nclass AuthenticationService {\n  login(username, password) {\n    return axios.post(API_URL, {\n      username,\n      password\n    }).then(res => {\n      localStorage.setItem(\"token\", res.data.token);\n      return res.data;\n    }).catch(function (error) {\n      return error.response.status;\n    });\n  }\n\n  checkToken() {\n    return axios.get(API_URL, this.getConfig()).then(res => {\n      return res.data;\n    }).catch(function (error) {\n      return error.response.status;\n    });\n  }\n\n  getConfig() {\n    if (localStorage.getItem(\"token\") !== null) return {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\")\n      }\n    };\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n    console.log(\"111\");\n  }\n\n  isUserLoggedIn() {\n    let token = localStorage.getItem(\"token\");\n    if (token === null) return false;else return true;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/Arslan/eclipse-workspace/Journal/react-frontend/src/services/AuthenticationService.js"],"names":["axios","API_URL","AuthenticationService","login","username","password","post","then","res","localStorage","setItem","data","token","catch","error","response","status","checkToken","get","getConfig","getItem","headers","logout","removeItem","console","log","isUserLoggedIn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,oCAAhB;;AAEA,MAAMC,qBAAN,CAA2B;AAEvBC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAoB;AACrB,WAAOL,KAAK,CACbM,IADQ,CACHL,OADG,EACM;AACbG,MAAAA,QADa;AAEbC,MAAAA;AAFa,KADN,EAINE,IAJM,CAIDC,GAAG,IAAI;AACbC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACA,aAAOJ,GAAG,CAACG,IAAX;AACD,KAPQ,EAONE,KAPM,CAOA,UAASC,KAAT,EAAe;AAClB,aAAOA,KAAK,CAACC,QAAN,CAAeC,MAAtB;AACL,KATQ,CAAP;AAUH;;AAEDC,EAAAA,UAAU,GAAE;AACV,WAAOjB,KAAK,CAACkB,GAAN,CAAUjB,OAAV,EAAmB,KAAKkB,SAAL,EAAnB,EAAqCZ,IAArC,CAA0CC,GAAG,IAAI;AACtD,aAAOA,GAAG,CAACG,IAAX;AACD,KAFM,EAEJE,KAFI,CAEE,UAASC,KAAT,EAAe;AACtB,aAAOA,KAAK,CAACC,QAAN,CAAeC,MAAtB;AACD,KAJM,CAAP;AAKD;;AAEDG,EAAAA,SAAS,GAAE;AACP,QAAGV,YAAY,CAACW,OAAb,CAAqB,OAArB,MAAkC,IAArC,EACA,OAAO;AAACC,MAAAA,OAAO,EAAC;AAAC,yBAAiB,YAAYZ,YAAY,CAACW,OAAb,CAAqB,OAArB;AAA9B;AAAT,KAAP;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJb,IAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAId,KAAK,GAAGH,YAAY,CAACW,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAGR,KAAK,KAAK,IAAb,EACA,OAAO,KAAP,CADA,KAEK,OAAO,IAAP;AACR;;AAtCsB;;AA0C3B,eAAe,IAAIV,qBAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/authenticate'\r\n\r\nclass AuthenticationService{\r\n\r\n    login(username, password){\r\n        return axios\r\n      .post(API_URL, {\r\n        username,\r\n        password\r\n      }).then(res => {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        return res.data;\r\n      }).catch(function(error){\r\n            return error.response.status;\r\n      });\r\n    }\r\n\r\n    checkToken(){\r\n      return axios.get(API_URL, this.getConfig()).then(res => {\r\n        return res.data;\r\n      }).catch(function(error){\r\n        return error.response.status;\r\n      });\r\n    }\r\n\r\n    getConfig(){\r\n        if(localStorage.getItem(\"token\") !== null)\r\n        return {headers:{'Authorization': 'Bearer ' + localStorage.getItem(\"token\")}};\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem(\"token\");\r\n        console.log(\"111\");\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let token = localStorage.getItem(\"token\");\r\n        if(token === null)\r\n        return false;\r\n        else return true;\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService();"]},"metadata":{},"sourceType":"module"}