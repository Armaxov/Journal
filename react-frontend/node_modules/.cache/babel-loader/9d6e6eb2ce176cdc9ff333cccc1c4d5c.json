{"ast":null,"code":"import axios from 'axios';\nimport AuthenticationService from './AuthenticationService';\nconst STUDENT_API_BASE_URL = \"http://localhost:8080/api/students\";\naxios.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem(\"token\"));\n\n  if (user && user.accessToken) {\n    const token = \"Bearer \" + user.accessToken;\n    config.headers.authorization = token;\n  }\n\n  return config;\n});\n\nclass StudentService {\n  getStudents() {\n    return axios.get(STUDENT_API_BASE_URL, AuthenticationService.getToken);\n  }\n\n  getStudentsById(studentId) {\n    return axios.get(STUDENT_API_BASE_URL + \"/\" + studentId, AuthenticationService.getToken);\n  }\n\n  createStudent(student) {\n    return axios.post(STUDENT_API_BASE_URL, student, AuthenticationService.getToken);\n  }\n\n  updateStudent(student, studentId) {\n    return axios.put(STUDENT_API_BASE_URL + \"/\" + studentId, student, AuthenticationService.getToken);\n  }\n\n  deleteStudent(studentId) {\n    return axios.delete(STUDENT_API_BASE_URL + \"/\" + studentId, AuthenticationService.getToken);\n  }\n\n}\n\nexport default new StudentService();","map":{"version":3,"sources":["C:/Users/Arslan/eclipse-workspace/Journal/react-frontend/src/services/StudentService.js"],"names":["axios","AuthenticationService","STUDENT_API_BASE_URL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","accessToken","token","headers","authorization","StudentService","getStudents","get","getToken","getStudentsById","studentId","createStudent","student","post","updateStudent","put","deleteStudent","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,MAAMC,oBAAoB,GAAG,oCAA7B;AAEAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrC,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAb;;AAEA,MAAGJ,IAAI,IAAIA,IAAI,CAACK,WAAhB,EAA4B;AACxB,UAAMC,KAAK,GAAG,YAAYN,IAAI,CAACK,WAA/B;AACAN,IAAAA,MAAM,CAACQ,OAAP,CAAeC,aAAf,GAA+BF,KAA/B;AACH;;AAED,SAAOP,MAAP;AACH,CATD;;AAWA,MAAMU,cAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAE;AACT,WAAOjB,KAAK,CAACkB,GAAN,CAAUhB,oBAAV,EAAgCD,qBAAqB,CAACkB,QAAtD,CAAP;AACH;;AAEDC,EAAAA,eAAe,CAACC,SAAD,EAAW;AACtB,WAAOrB,KAAK,CAACkB,GAAN,CAAUhB,oBAAoB,GAAG,GAAvB,GAA6BmB,SAAvC,EAAkDpB,qBAAqB,CAACkB,QAAxE,CAAP;AACH;;AAEDG,EAAAA,aAAa,CAACC,OAAD,EAAS;AAClB,WAAOvB,KAAK,CAACwB,IAAN,CAAWtB,oBAAX,EAAiCqB,OAAjC,EAA0CtB,qBAAqB,CAACkB,QAAhE,CAAP;AACH;;AAEDM,EAAAA,aAAa,CAACF,OAAD,EAAUF,SAAV,EAAoB;AAC7B,WAAOrB,KAAK,CAAC0B,GAAN,CAAUxB,oBAAoB,GAAG,GAAvB,GAA6BmB,SAAvC,EAAkDE,OAAlD,EAA2DtB,qBAAqB,CAACkB,QAAjF,CAAP;AACH;;AAEDQ,EAAAA,aAAa,CAACN,SAAD,EAAW;AACpB,WAAOrB,KAAK,CAAC4B,MAAN,CAAa1B,oBAAoB,GAAG,GAAvB,GAA6BmB,SAA1C,EAAqDpB,qBAAqB,CAACkB,QAA3E,CAAP;AACH;;AAnBe;;AAuBpB,eAAe,IAAIH,cAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst STUDENT_API_BASE_URL = \"http://localhost:8080/api/students\"\r\n\r\naxios.interceptors.request.use(config => {\r\n    const user = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n    if(user && user.accessToken){\r\n        const token = \"Bearer \" + user.accessToken;\r\n        config.headers.authorization = token;\r\n    }\r\n\r\n    return config;\r\n});\r\n\r\nclass StudentService{\r\n    getStudents(){\r\n        return axios.get(STUDENT_API_BASE_URL, AuthenticationService.getToken);\r\n    }\r\n\r\n    getStudentsById(studentId){\r\n        return axios.get(STUDENT_API_BASE_URL + \"/\" + studentId, AuthenticationService.getToken);\r\n    }\r\n\r\n    createStudent(student){\r\n        return axios.post(STUDENT_API_BASE_URL, student, AuthenticationService.getToken);\r\n    }\r\n\r\n    updateStudent(student, studentId){\r\n        return axios.put(STUDENT_API_BASE_URL + \"/\" + studentId, student, AuthenticationService.getToken);\r\n    }\r\n\r\n    deleteStudent(studentId){\r\n        return axios.delete(STUDENT_API_BASE_URL + \"/\" + studentId, AuthenticationService.getToken);\r\n    }\r\n\r\n}\r\n\r\nexport default new StudentService();"]},"metadata":{},"sourceType":"module"}