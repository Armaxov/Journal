{"ast":null,"code":"import axios from 'axios';\nconst GROUP_API_BASE_URL = \"http://localhost:8080/api/groups\";\n\nclass GroupService {\n  getGroups() {\n    return axios.get(GROUP_API_BASE_URL, AuthenticationService.getConfig);\n  }\n\n  getGroupById(groupId) {\n    return axios.get(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig);\n  }\n\n  createGroup(group) {\n    return axios.post(GROUP_API_BASE_URL, group, AuthenticationService.getConfig);\n  }\n\n  updateGroup(group, groupId) {\n    return axios.put(GROUP_API_BASE_URL + \"/\" + groupId, group, AuthenticationService.getConfig);\n  }\n\n  deleteGroup(groupId) {\n    return axios.delete(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig);\n  }\n\n}\n\nexport default new GroupService();","map":{"version":3,"sources":["C:/Users/Arslan/eclipse-workspace/Journal/react-frontend/src/services/GroupService.js"],"names":["axios","GROUP_API_BASE_URL","GroupService","getGroups","get","AuthenticationService","getConfig","getGroupById","groupId","createGroup","group","post","updateGroup","put","deleteGroup","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,kCAA3B;;AAEA,MAAMC,YAAN,CAAkB;AACdC,EAAAA,SAAS,GAAE;AACP,WAAOH,KAAK,CAACI,GAAN,CAAUH,kBAAV,EAA8BI,qBAAqB,CAACC,SAApD,CAAP;AACH;;AAEDC,EAAAA,YAAY,CAACC,OAAD,EAAS;AACjB,WAAOR,KAAK,CAACI,GAAN,CAAUH,kBAAkB,GAAG,GAArB,GAA2BO,OAArC,EAA8CH,qBAAqB,CAACC,SAApE,CAAP;AACH;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,WAAOV,KAAK,CAACW,IAAN,CAAWV,kBAAX,EAA+BS,KAA/B,EAAsCL,qBAAqB,CAACC,SAA5D,CAAP;AACH;;AAEDM,EAAAA,WAAW,CAACF,KAAD,EAAQF,OAAR,EAAgB;AACvB,WAAOR,KAAK,CAACa,GAAN,CAAUZ,kBAAkB,GAAG,GAArB,GAA2BO,OAArC,EAA8CE,KAA9C,EAAqDL,qBAAqB,CAACC,SAA3E,CAAP;AACH;;AAEDQ,EAAAA,WAAW,CAACN,OAAD,EAAS;AAChB,WAAOR,KAAK,CAACe,MAAN,CAAad,kBAAkB,GAAG,GAArB,GAA2BO,OAAxC,EAAiDH,qBAAqB,CAACC,SAAvE,CAAP;AACH;;AAnBa;;AAuBlB,eAAe,IAAIJ,YAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst GROUP_API_BASE_URL = \"http://localhost:8080/api/groups\"\r\n\r\nclass GroupService{\r\n    getGroups(){\r\n        return axios.get(GROUP_API_BASE_URL, AuthenticationService.getConfig);\r\n    }\r\n\r\n    getGroupById(groupId){\r\n        return axios.get(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig);\r\n    }\r\n\r\n    createGroup(group){\r\n        return axios.post(GROUP_API_BASE_URL, group, AuthenticationService.getConfig);\r\n    }\r\n\r\n    updateGroup(group, groupId){\r\n        return axios.put(GROUP_API_BASE_URL + \"/\" + groupId, group, AuthenticationService.getConfig);\r\n    }\r\n\r\n    deleteGroup(groupId){\r\n        return axios.delete(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig);\r\n    }\r\n    \r\n}\r\n\r\nexport default new GroupService();"]},"metadata":{},"sourceType":"module"}