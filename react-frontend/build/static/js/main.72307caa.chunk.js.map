{"version":3,"sources":["components/FooterComponent.jsx","services/AuthenticationService.js","components/HeaderComponent.jsx","services/GroupService.js","services/StudentService.js","components/StudentListComponent.jsx","components/CreateStudentComponent.jsx","components/CreateGroupComponent.jsx","components/GroupListComponent.jsx","components/LogInComponent.jsx","components/LogoutComponent.jsx","components/AuthenticatedRoute.jsx","components/MenuComponent.jsx","services/JournalService.js","components/JournalListComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","className","Component","username","password","axios","post","then","res","localStorage","setItem","data","token","catch","error","response","status","getItem","headers","removeItem","console","log","HeaderComponent","props","state","AuthenticationService","isUserLoggedIn","style","marginLeft","id","href","this","createStudentLink","createGroupLink","loginLink","logoutLink","GROUP_API_BASE_URL","get","getConfig","groupId","group","put","delete","name","getGroups","map","groupName","STUDENT_API_BASE_URL","studentId","student","StudentListComponent","students","groups","addStudent","bind","editStudent","StudentService","getStudents","setState","GroupService","history","push","currentGroup","forEach","cursor","onClick","firstName","lastName","getGroupNameById","CreateStudentComponent","saveOrUpdateStudent","e","preventDefault","createStudent","updateStudent","incorrectData","changeFirstNameHandler","event","target","value","length","incorrectStudentFirstName","changeLastNameHandler","incorrectStudentLastName","changeGroupHandler","newId","getGroupIdByName","match","params","incorrectStudentFirstNameMessage","incorrectStudentLastNameMessage","incorrectDataMessage","getStudentsById","deleteStudent","window","location","reload","backgroundColor","borderRadius","getTitle","placeholder","onChange","getGroupList","cancel","getDeleteButton","CreateGroupComponent","incorrectGroupName","changeYearHandler","groupYear","year","isNaN","incorrectGroupYear","saveOrUpdateGroup","createGroup","updateGroup","incorrectGroupNameMessage","incorrectGroupYearMessage","getGroupById","deleteGroup","GroupListComponent","addGroup","editGroup","LogInComponent","changeLoginHandler","userNotFound","incorrectUsername","changePasswordHandler","incorrectPassword","login","document","userNotFoundMessage","incorrectUsernameMessage","type","incorrectPasswordMessage","LogoutComponent","logout","AuthenticatedRoute","to","MenuComponent","redirectGroups","redirectJournal","redirectStudents","redirectAddStudent","redirectAddGroup","createAddStudentButton","createAddGroupButton","JOURNAL_API_BASE_URL","journalId","journal","JournalListComponent","journals","JournalService","getJournals","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8PAaeA,E,4JAVX,WACI,OACA,8BACI,wBAAQC,UAAU,iB,GAJAC,a,gBCqCf,M,qFAhCX,SAAMC,EAAUC,GACZ,OAAOC,IACRC,KAPS,qCAOK,CACbH,WACAC,aACCG,MAAK,SAAAC,GAEN,OADAC,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OAChCJ,EAAIG,QACVE,OAAM,SAASC,GACZ,OAAOA,EAAMC,SAASC,Y,uBAI9B,WACI,GAAqC,OAAlCP,aAAaQ,QAAQ,SACxB,MAAO,CAACC,QAAQ,CAAC,cAAiB,UAAYT,aAAaQ,QAAQ,a,oBAGvE,WACIR,aAAaU,WAAW,SACxBC,QAAQC,IAAI,S,4BAGhB,WAEI,OAAa,OADDZ,aAAaQ,QAAQ,a,MC2B1BK,E,kDAtDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,GAHC,E,8CAQlB,WACI,GAAGC,EAAsBC,iBACzB,OAAO,oBAAIC,MAAO,CAACC,WAAW,QAAvB,SAAgC,mBAAGC,GAAG,aAAaC,KAAK,UAAxB,gD,uBAG3C,WACI,IAAIL,EAAsBC,iBAC1B,OAAO,oBAAIC,MAAO,CAACC,WAAW,QAAvB,SAAgC,mBAAGC,GAAG,aAAaC,KAAK,SAAxB,gD,+BAG3C,WACI,GAAGL,EAAsBC,iBACzB,OAAO,oBAAIC,MAAO,CAACC,WAAW,QAAvB,SAAgC,mBAAGC,GAAG,aAAaC,KAAK,kBAAxB,mH,6BAG3C,WACI,GAAGL,EAAsBC,iBACzB,OAAO,oBAAIC,MAAO,CAACC,WAAW,QAAvB,SAAgC,mBAAGC,GAAG,aAAaC,KAAK,gBAAxB,uG,oBAG3C,WACI,OACI,8BACI,8BACA,iCACI,sBAAK7B,UAAU,iDAAf,UACI,qBAAKA,UAAU,eAAf,SACI,mBAAGA,UAAU,eAAe6B,KAAK,IAAjC,yFAEJ,qBAAI7B,UAAU,MAAd,UACI,oBAAIA,UAAU,SAAd,SAAuB,mBAAG4B,GAAG,aAAaC,KAAK,YAAxB,2GACvB,oBAAIH,MAAO,CAACC,WAAW,QAAvB,SAAgC,mBAAGC,GAAG,aAAaC,KAAK,UAAxB,mFAC/BC,KAAKC,oBACLD,KAAKE,kBACLF,KAAKG,YACLH,KAAKI,aACN,uC,GA7CEjC,a,OCAxBkC,EAAqB,mCAkCZ,M,yFA9BX,WACI,OAAO/B,IAAMgC,IAAID,EAAoBX,EAAsBa,e,0BAG/D,SAAaC,GACT,OAAOlC,IAAMgC,IAAID,EAAqB,IAAMG,EAASd,EAAsBa,e,yBAG/E,SAAYE,GACR,OAAOnC,IAAMC,KAAK8B,EAAoBI,EAAOf,EAAsBa,e,yBAGvE,SAAYE,EAAOD,GACf,OAAOlC,IAAMoC,IAAIL,EAAqB,IAAMG,EAASC,EAAOf,EAAsBa,e,yBAGtF,SAAYC,GACR,OAAOlC,IAAMqC,OAAON,EAAqB,IAAMG,EAASd,EAAsBa,e,4BAGlF,SAAeK,GACKZ,KAAKa,YACXC,KAAI,SAAAL,GACV,OAAGA,EAAMM,YAAcH,EACZH,EACJ,U,MC7BbO,EAAuB,qCAsCd,M,2FAlCX,WACI,OAAO1C,IAAMgC,IAAIU,EAAsBtB,EAAsBa,aAC5DzB,OAAM,SAASC,GACZ,OAAOA,EAAMC,SAASC,Y,6BAI9B,SAAgBgC,GACZ,OAAO3C,IAAMgC,IAAIU,EAAuB,IAAMC,EAAWvB,EAAsBa,e,2BAGnF,SAAcW,GACV,OAAO5C,IAAMC,KAAKyC,EAAsBE,EAASxB,EAAsBa,aACtEzB,OAAM,SAASC,GACZ,OAAOA,EAAMC,SAASC,Y,2BAI9B,SAAciC,EAASD,GACnB,OAAO3C,IAAMoC,IAAIM,EAAuB,IAAMC,EAAWC,EAASxB,EAAsBa,aACvFzB,OAAM,SAASC,GACZ,OAAOA,EAAMC,SAASC,Y,2BAI9B,SAAcgC,GACV,OAAO3C,IAAMqC,OAAOK,EAAuB,IAAMC,EAAWvB,EAAsBa,aACjFzB,OAAM,SAASC,GACZ,OAAOA,EAAMC,SAASC,c,MC4CnBkC,E,kDAzEX,WAAY3B,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACT2B,SAAS,GACTC,OAAO,IAEX,EAAKC,WAAY,EAAKA,WAAWC,KAAhB,gBACjB,EAAKC,YAAa,EAAKA,YAAYD,KAAjB,gBARJ,E,qDAWlB,WAAoB,IAAD,OACfE,EAAeC,cAAclD,MAAK,SAACC,GAC/B,EAAKkD,SAAS,CAACP,SAAU3C,EAAIG,UAGjCgD,EAAaf,YAAYrC,MAAK,SAAAC,GAC1B,EAAKkD,SAAS,CAACN,OAAQ5C,EAAIG,Y,wBAKnC,WACIoB,KAAKR,MAAMqC,QAAQC,KAAK,qB,yBAG5B,SAAYhC,GACRE,KAAKR,MAAMqC,QAAQC,KAAnB,uBAAwChC,M,8BAG5C,SAAiBA,GACb,IAAIiC,EAAe,GAMnB,OALA/B,KAAKP,MAAM4B,OAAOW,SAAQ,SAACvB,GACpBA,EAAMX,IAAMA,IACXiC,EAAetB,EAAMM,cAGtBgB,I,oBAGX,WAAU,IAAD,OACL,OACI,gCACI,oBAAI7D,UAAU,cAAd,yGACA,qBAAKA,UAAU,MAAf,SACI,wBAAOA,UAAU,qCAAjB,UACI,gCACI,+BACI,oDACA,4EACA,2EAIR,gCAEQ8B,KAAKP,MAAM2B,SAASN,KAChB,SAAAI,GAAO,OACP,qBAAuBtB,MAAS,CAACqC,OAAO,WAAYC,QAAS,EAAKV,YAAYD,KAAK,EAAML,EAAQpB,IAAjG,UACI,6BAAKoB,EAAQiB,YACb,6BAAKjB,EAAQkB,WACb,6BAAK,EAAKC,iBAAiBnB,EAAQV,aAH5BU,EAAQpB,qB,GA3DpB3B,a,eCsMpBmE,E,kDArMX,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IA6CV+C,oBAAsB,SAAAC,GAElB,GADAA,EAAEC,iBACyB,IAAxB,EAAKhD,MAAM0C,WAA0C,IAAvB,EAAK1C,MAAM2C,SAA5C,CAIA,IAAIlB,EAAU,CACViB,UAAW,EAAK1C,MAAM0C,UACtBC,SAAU,EAAK3C,MAAM2C,SACrB5B,QAAS,EAAKf,MAAMe,UACH,GAAlB,EAAKf,MAAMK,GACV2B,EAAeiB,cAAcxB,GAAS1C,MAAK,SAAAC,GACvC,EAAKe,MAAMqC,QAAQC,KAAK,gBAI5BL,EAAekB,cAAczB,EAAS,EAAKzB,MAAMK,IAAItB,MAAK,SAAAC,GACtD,EAAKe,MAAMqC,QAAQC,KAAK,qBAd5B,EAAKH,SAAS,CAACiB,eAAe,KAjDnB,EAoEnBC,uBAAyB,SAACC,GACtB,IAAIX,EAAYW,EAAMC,OAAOC,MAC7B,EAAKrB,SAAS,CAACQ,UAAWA,IACH,GAApBA,EAAUc,OACT,EAAKtB,SAAS,CAACuB,2BAA2B,IAE1C,EAAKvB,SAAS,CAACuB,2BAA2B,KA1E/B,EA6EnBC,sBAAwB,SAACL,GACrB,IAAIV,EAAWU,EAAMC,OAAOC,MAC5B,EAAKrB,SAAS,CAACS,SAAUA,IACH,GAAnBA,EAASa,OACR,EAAKtB,SAAS,CAACyB,0BAA0B,IAEzC,EAAKzB,SAAS,CAACyB,0BAA0B,KAnF9B,EAsFnBC,mBAAqB,SAACP,GAClB,IAAIQ,EAAQ,EAAKC,iBAAiBT,EAAMC,OAAOC,OAC/C,EAAKrB,SAAS,CAACnB,QAAS8C,KArFxB,EAAK7D,MAAQ,CACTK,GAAI,EAAKN,MAAMgE,MAAMC,OAAO3D,GAC5BqC,UAAW,GACXC,SAAU,GACV5B,QAAS,GACTa,OAAQ,GACR6B,2BAA2B,EAC3BE,0BAA0B,EAC1BR,eAAe,GAInB,EAAKC,uBAAyB,EAAKA,uBAAuBtB,KAA5B,gBAC9B,EAAK4B,sBAAwB,EAAKA,sBAAsB5B,KAA3B,gBAC7B,EAAK8B,mBAAqB,EAAKA,mBAAmB9B,KAAxB,gBAC1B,EAAKmC,iCAAmC,EAAKA,iCAAiCnC,KAAtC,gBACxC,EAAKoC,gCAAkC,EAAKA,gCAAgCpC,KAArC,gBACvC,EAAKqC,qBAAuB,EAAKA,qBAAqBrC,KAA1B,gBApBb,E,qDAuBnB,WAAoB,IAAD,OACfK,EAAaf,YAAYrC,MAAK,SAAAC,GAC1B,EAAKkD,SAAS,CAACN,OAAQ5C,EAAIG,KACvB4B,QAAS/B,EAAIG,KAAK,GAAGkB,SAGR,GAAlBE,KAAKP,MAAMK,IAIV2B,EAAeoC,gBAAgB7D,KAAKP,MAAMK,IAAItB,MAAK,SAACC,GAChD,IAAIyC,EAAUzC,EAAIG,KAClB,EAAK+C,SAAS,CACVQ,UAAWjB,EAAQiB,UACnBC,SAAUlB,EAAQkB,SAClB5B,QAASU,EAAQV,e,sBAqDjC,WACI,OAAqB,GAAlBR,KAAKP,MAAMK,GACH,oBAAI5B,UAAU,cAAd,oJAGA,oBAAIA,UAAU,cAAd,mK,oBAIf,WACI8B,KAAKR,MAAMqC,QAAQC,KAAK,e,8BAG5B,SAAiBlB,GACb,IAAImB,EAAe,GAMnB,OALA/B,KAAKP,MAAM4B,OAAOW,SAAQ,SAACvB,GACpBA,EAAMM,WAAaH,IAClBmB,EAAetB,EAAMX,OAGtBiC,I,0BAGX,WACI,IAAIV,EAAS,GAIb,OAHArB,KAAKP,MAAM4B,OAAOW,SAAQ,SAACvB,GACvBY,EAAOS,KAAK,wBAAuBkB,MAAOvC,EAAMM,UAApC,SAAgDN,EAAMM,WAAzCN,EAAMX,QAE5BuB,I,2BAGX,WACIrB,KAAKR,MAAMqC,QAAQC,KAAK,aACxBL,EAAeqC,cAAc9D,KAAKP,MAAMK,IACxCiE,OAAOC,SAASC,W,6BAGpB,WAAkB,IAAD,OACb,IAAqB,GAAlBjE,KAAKP,MAAMK,GACV,OAAQ,wBAAQF,MAAS,CAACC,WAAW,QAASqC,QAAS,WAAO,EAAK4B,iBAAkB5F,UAAU,iBAAvF,0D,8CAIhB,WACI,GAAG8B,KAAKP,MAAMyD,0BACV,OAAO,qBAAKhF,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,6G,6CAG3G,WACI,GAAGG,KAAKP,MAAM2D,yBACV,OAAO,qBAAKlF,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,qI,kCAG3G,WACI,GAAGG,KAAKP,MAAMmD,cACd,OAAO,qBAAK1E,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,+M,oBAGvG,WACI,OACI,8BACI,qBAAK3B,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,wCAAf,UACK8B,KAAKoE,WACN,qBAAKlG,UAAU,YAAf,SACI,iCACK8B,KAAK4D,uBACN,sBAAK1F,UAAU,aAAf,UACI,uDACA,uBAAOmG,YAAY,qBAAMzD,KAAK,YAAY1C,UAAU,eACpD8E,MAAOhD,KAAKP,MAAM0C,UAAWmC,SAAUtE,KAAK6C,yBAC5C,0BACC7C,KAAK0D,sCAGV,sBAAKxF,UAAU,aAAf,UACI,+EACA,uBAAOmG,YAAY,6CAAUzD,KAAK,WAAW1C,UAAU,eACvD8E,MAAOhD,KAAKP,MAAM2C,SAAUkC,SAAUtE,KAAKmD,wBAC3C,0BACCnD,KAAK2D,qCAIV,sBAAKzF,UAAU,aAAf,UACI,yEACA,wBAAQ0C,KAAK,QAAQ1C,UAAU,eAAeoG,SAAUtE,KAAKqD,mBAA7D,SACKrD,KAAKuE,iBAEV,6BAGJ,wBAAQrG,UAAU,kBAAkBgE,QAASlC,KAAKuC,oBAAlD,oEACA,wBAAQrE,UAAU,iBAAiBgE,QAASlC,KAAKwE,OAAOjD,KAAKvB,MAAOJ,MAAO,CAACC,WAAY,QAAxF,kDACCG,KAAKyE,oC,GA3LLtG,aCoKtBuG,E,kDArKX,WAAYlF,GAAQ,IAAD,8BACf,cAAMA,IA+CV6D,mBAAqB,SAACP,GAClB,IAAI/B,EAAY+B,EAAMC,OAAOC,MAC7B,EAAKrB,SAAS,CAACZ,UAAWA,IACH,GAApBA,EAAUkC,OACT,EAAKtB,SAAS,CAACgD,oBAAoB,IAGnC,EAAKhD,SAAS,CAACgD,oBAAoB,KAvDxB,EA4DnBC,kBAAoB,SAAC9B,GACjB,IAAI+B,EAAY/B,EAAMC,OAAOC,MAC7B,EAAKrB,SAAS,CAACmD,KAAMD,IACE,GAApBA,EAAU5B,QAAe8B,MAAMF,GAC9B,EAAKlD,SAAS,CAACqD,oBAAoB,IAGnC,EAAKrD,SAAS,CAACqD,oBAAoB,KAnExB,EA2EnBC,kBAAoB,SAAAzC,GAEhB,GADAA,EAAEC,iBACyB,IAAxB,EAAKhD,MAAMsB,WAAsC,IAAnB,EAAKtB,MAAMqF,KAA5C,CAIA,IAAIrE,EAAQ,CACRM,UAAW,EAAKtB,MAAMsB,UACtB8D,UAAW,EAAKpF,MAAMqF,OAEA,GAAvB,EAAKrF,MAAMe,QACVoB,EAAasD,YAAYzE,GAAOjC,MAAK,SAAAC,GACjC,EAAKe,MAAMqC,QAAQC,KAAK,cAI5BF,EAAauD,YAAY1E,EAAO,EAAKhB,MAAMe,SAAShC,MAAK,SAAAC,GACrD,EAAKe,MAAMqC,QAAQC,KAAK,mBAd5B,EAAKH,SAAS,CAACiB,eAAe,KA3ElC,EAAKnD,MAAQ,CACTe,QAAQ,EAAKhB,MAAMgE,MAAMC,OAAO3D,GAChCiB,UAAU,GACV+D,KAAK,GACLE,oBAAoB,EACpBL,oBAAoB,EACpB/B,eAAe,GAGnB,EAAKqC,kBAAoB,EAAKA,kBAAkB1D,KAAvB,gBACzB,EAAK8B,mBAAqB,EAAKA,mBAAmB9B,KAAxB,gBAC1B,EAAKqD,kBAAoB,EAAKA,kBAAkBrD,KAAvB,gBACzB,EAAK6D,0BAA4B,EAAKA,0BAA0B7D,KAA/B,gBACjC,EAAK8D,0BAA4B,EAAKA,0BAA0B9D,KAA/B,gBACjC,EAAKqC,qBAAuB,EAAKA,qBAAqBrC,KAA1B,gBAjBb,E,qDAoBnB,WAAoB,IAAD,OACXzB,EAAKE,KAAKP,MAAMe,SACV,GAAPV,GAIC8B,EAAa0D,aAAaxF,GAAItB,MAAK,SAACC,GAChC,IAAIgC,EAAQhC,EAAIG,KAChB,EAAK+C,SAAS,CACVZ,UAAWN,EAAMM,UACjB+D,KAAMrE,EAAMoE,iB,sBAS5B,WACI,OAA0B,GAAvB7E,KAAKP,MAAMe,QACH,oBAAItC,UAAU,cAAd,kIAGA,oBAAIA,UAAU,cAAd,qG,oBA2Bf,WACI8B,KAAKR,MAAMqC,QAAQC,KAAK,a,yBA2B5B,WACI9B,KAAKR,MAAMqC,QAAQC,KAAK,WACxBF,EAAa2D,YAAYvF,KAAKP,MAAMe,SACpCuD,OAAOC,SAASC,W,6BAGpB,WAAkB,IAAD,OACb,IAA0B,GAAvBjE,KAAKP,MAAMe,QACV,OAAQ,wBAAQZ,MAAS,CAACC,WAAW,QAASqC,QAAS,WAAO,EAAKqD,eAAgBrH,UAAU,iBAArF,0D,uCAKhB,WACI,GAAG8B,KAAKP,MAAMuF,mBACV,OAAO,qBAAK9G,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,kJ,uCAG3G,WACI,GAAGG,KAAKP,MAAMkF,mBACV,OAAO,qBAAKzG,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,gL,kCAG3G,WACI,GAAGG,KAAKP,MAAMmD,cACd,OAAO,qBAAK1E,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,sN,oBAGvG,WACI,OACI,8BACI,qBAAK3B,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,wCAAf,UACK8B,KAAKoE,WACN,qBAAKlG,UAAU,YAAf,SACA,iCACS8B,KAAK4D,uBACN,sBAAK1F,UAAU,aAAf,UACI,yEACA,uBAAOmG,YAAY,uCAASzD,KAAK,QAAQ1C,UAAU,eACnD8E,MAAOhD,KAAKP,MAAMsB,UAAWuD,SAAUtE,KAAKqD,qBAC5C,0BACCrD,KAAKoF,+BAGV,sBAAKlH,UAAU,aAAf,UACI,0HACA,uBAAOmG,YAAY,GAAGzD,KAAK,OAAO1C,UAAU,eAC5C8E,MAAOhD,KAAKP,MAAMqF,KAAMR,SAAUtE,KAAK4E,oBACvC,0BACC5E,KAAKqF,+BAEV,wBAAQnH,UAAU,kBAAkBgE,QAASlC,KAAKiF,kBAAlD,oEACA,wBAAQ/G,UAAU,iBAAiBgE,QAASlC,KAAKwE,OAAOjD,KAAKvB,MAAOJ,MAAO,CAACC,WAAY,QAAxF,kDACCG,KAAKyE,oC,GA3JPtG,aC2DpBqH,E,kDA1DX,WAAYhG,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACT4B,OAAO,IAEX,EAAKoE,SAAU,EAAKA,SAASlE,KAAd,gBACf,EAAKmE,UAAW,EAAKA,UAAUnE,KAAf,gBAPF,E,qDAWlB,WAAoB,IAAD,OACfK,EAAaf,YAAYrC,MAAK,SAAAC,GAC1B,EAAKkD,SAAS,CAACN,OAAQ5C,EAAIG,Y,sBAKnC,WACIoB,KAAKR,MAAMqC,QAAQC,KAAK,mB,uBAG5B,SAAUhC,GACNE,KAAKR,MAAMqC,QAAQC,KAAnB,qBAAsChC,M,oBAI1C,WAAU,IAAD,OACL,OACI,gCACI,oBAAI5B,UAAU,cAAd,iFACA,qBAAKA,UAAU,MAAf,SACI,wBAAOA,UAAU,qCAAjB,UACI,gCACI,+BACI,sEACA,4HAIR,gCAEQ8B,KAAKP,MAAM4B,OAAOP,KACd,SAAAL,GAAK,OACL,qBAAqByB,QAAS,EAAKwD,UAAUnE,KAAK,EAAMd,EAAMX,IAA9D,UACI,6BAAKW,EAAMM,YACX,6BAAKN,EAAMoE,cAFJpE,EAAMX,qB,GA7CpB3B,aC4GlBwH,E,kDAzGX,WAAYnG,GAAO,IAAD,8BACd,cAAMA,IAkBVoG,mBAAqB,SAAC9C,GAClB,IAAI1E,EAAW0E,EAAMC,OAAOC,MAC5B,EAAKrB,SAAS,CAACvD,SAAUA,EAAUyH,cAAa,IAC7CzH,EAAS6E,OAAS,GAAK7E,EAAS6E,OAAS,EACxC,EAAKtB,SAAS,CAACmE,mBAAkB,IAEjC,EAAKnE,SAAS,CAACmE,mBAAkB,KAzBvB,EA4BlBC,sBAAwB,SAACjD,GACrB,IAAIzE,EAAWyE,EAAMC,OAAOC,MAC5B,EAAKrB,SAAS,CAACtD,SAAUA,EAAUwH,cAAa,IAC7CxH,EAAS4E,OAAS,GAAK5E,EAAS4E,OAAS,EACxC,EAAKtB,SAAS,CAACqE,mBAAkB,IAEjC,EAAKrE,SAAS,CAACqE,mBAAkB,KAlCvB,EAqClBC,MAAQ,SAAAzD,GACJA,EAAEC,iBACU/C,EAAsBuG,MAAM,EAAKxG,MAAMrB,SAAU,EAAKqB,MAAMpB,UAClEG,MAAK,SAAAC,GACG,KAAPA,GACC,EAAKkD,SAAS,CAACkE,cAAc,IACH,GAA3B,EAAKpG,MAAMoG,eACV,EAAKrG,MAAMqC,QAAQC,KAAK,KACxBoE,SAASlC,SAASC,cA1C1B,EAAKxE,MAAQ,CACTrB,SAAU,GACVC,SAAU,GACVwH,cAAc,EACdC,mBAAmB,EACnBE,mBAAmB,GAGvB,EAAKJ,mBAAqB,EAAKA,mBAAmBrE,KAAxB,gBAC1B,EAAKwE,sBAAwB,EAAKA,sBAAsBxE,KAA3B,gBAC7B,EAAK0E,MAAQ,EAAKA,MAAM1E,KAAX,gBACb,EAAK4E,oBAAsB,EAAKA,oBAAoB5E,KAAzB,gBAdb,E,uDAkDlB,WACI,GAAGvB,KAAKP,MAAMoG,aACV,OAAO,qBAAK3H,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,+O,sCAG3G,WACI,GAAGG,KAAKP,MAAMqG,kBACV,OAAO,qBAAK5H,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,+M,sCAG3G,WACI,GAAGG,KAAKP,MAAMuG,kBACV,OAAO,qBAAK9H,UAAU,aAAc0B,MAAO,CAACsE,gBAAgB,qBAAsBC,aAAa,GAAxF,SAA4F,uBAAOvE,MAAO,CAACC,WAAW,IAA1B,wJ,oBAG3G,WACIG,KAAKR,MAAMqC,QAAQC,KAAK,O,oBAG5B,WACI,OACI,8BACI,qBAAK5D,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,wCAAf,UACI,oBAAIA,UAAU,cAAd,4CACA,qBAAKA,UAAU,YAAf,SACI,iCACK8B,KAAKmG,sBACN,sBAAKjI,UAAU,aAAf,UACI,mEACA,uBAAOmG,YAAY,iCAAQzD,KAAK,QAAQ1C,UAAU,eAClD8E,MAAOhD,KAAKP,MAAMwG,MAAO3B,SAAUtE,KAAK4F,wBAE3C5F,KAAKoG,2BAEN,sBAAKlI,UAAU,aAAf,UACI,yEACA,uBAAOmI,KAAO,WAAWhC,YAAY,uCAASzD,KAAK,WAAW1C,UAAU,eACxE8E,MAAOhD,KAAKP,MAAMpB,SAAUiG,SAAUtE,KAAK+F,2BAE9C/F,KAAKsG,2BAEN,wBAAQpI,UAAU,kBAAkBgE,QAASlC,KAAKiG,MAAlD,4CACA,wBAAQ/H,UAAU,iBAAiBgE,QAASlC,KAAKwE,OAAOjD,KAAKvB,MAAOJ,MAAO,CAACC,WAAY,QAAxF,oE,GAhGP1B,aCsCdoI,E,kDAtCX,WAAY/G,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,GAGb,EAAK+G,OAAS,EAAKA,OAAOjF,KAAZ,gBANA,E,0CASlB,WACI7B,EAAsB8G,SACtBxG,KAAKR,MAAMqC,QAAQC,KAAK,KACxBoE,SAASlC,SAASC,W,oBAGtB,WACI,OACI,mCACI,qBAAK/F,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,wCAAf,UACI,oBAAIA,UAAU,cAAd,4CACA,sBAAKA,UAAU,YAAf,UACI,gLACA,+BACI,qBAAKA,UAAU,cAAf,SACI,wBAAQA,UAAU,kBAAkBgE,QAASlC,KAAKwG,OAAlD,gE,GA3BVrI,a,QCYfsI,E,4JAVX,WACI,OAAI/G,EAAsBC,iBACf,cAAC,IAAD,eAAWK,KAAKR,QAEhB,cAAC,IAAD,CAAUkH,GAAG,e,GALCvI,aCyDlBwI,E,kDAzDX,WAAYnH,GAAQ,IAAD,8BACf,cAAMA,IAEDoH,eAAiB,EAAKA,eAAerF,KAApB,gBACtB,EAAKsF,gBAAkB,EAAKA,gBAAgBtF,KAArB,gBACvB,EAAKuF,iBAAmB,EAAKA,iBAAiBvF,KAAtB,gBACxB,EAAKwF,mBAAqB,EAAKA,mBAAmBxF,KAAxB,gBAC1B,EAAKyF,iBAAmB,EAAKA,iBAAiBzF,KAAtB,gBAPT,E,oDAWnB,WACIvB,KAAKR,MAAMqC,QAAQC,KAAK,e,gCAG5B,WACI9B,KAAKR,MAAMqC,QAAQC,KAAK,qB,4BAG5B,WACI9B,KAAKR,MAAMqC,QAAQC,KAAK,a,8BAG5B,WACI9B,KAAKR,MAAMqC,QAAQC,KAAK,mB,6BAG5B,WACI9B,KAAKR,MAAMqC,QAAQC,KAAK,e,oCAG5B,WACI,GAAGpC,EAAsBC,iBACrB,OAAO,qBAAKzB,UAAU,OAAf,SAAsB,wBAAQ4B,GAAG,aAAaoC,QAASlC,KAAK+G,mBAAtC,6G,kCAGrC,WACI,GAAGrH,EAAsBC,iBACrB,OAAO,qBAAKzB,UAAU,OAAf,SAAsB,wBAAQ4B,GAAG,aAAaoC,QAASlC,KAAKgH,iBAAtC,iG,oBAGrC,WACI,OACI,8BACG,sBAAK9I,UAAU,iBAAiB4B,GAAG,cAAnC,UACI,qBAAK5B,UAAU,OAAf,SAAsB,wBAAQ4B,GAAG,aAAaoC,QAASlC,KAAK6G,gBAAtC,qGACtB,qBAAK3I,UAAU,OAAf,SAAsB,wBAAQ4B,GAAG,aAAaoC,QAASlC,KAAK8G,iBAAtC,2GACtB,qBAAK5I,UAAU,OAAf,SAAsB,wBAAQ4B,GAAG,aAAaoC,QAASlC,KAAK4G,eAAtC,mFACrB5G,KAAKiH,yBACLjH,KAAKkH,gC,GAlDG/I,aCAtBgJ,EAAuB,qCA0Bd,M,2FAtBX,WACI,OAAO7I,IAAMgC,IAAI6G,EAAsBzH,EAAsBa,e,6BAGjE,SAAgB6G,GACZ,OAAO9I,IAAMgC,IAAI6G,EAAuB,IAAMC,EAAW1H,EAAsBa,e,2BAGnF,SAAc8G,GACV,OAAO/I,IAAMC,KAAK4I,EAAsBE,EAAS3H,EAAsBa,e,2BAG3E,SAAc8G,EAASD,GACnB,OAAO9I,IAAMoC,IAAIyG,EAAuB,IAAMC,EAAWC,EAAS3H,EAAsBa,e,2BAG5F,SAAc6G,GACV,OAAO9I,IAAMqC,OAAOwG,EAAuB,IAAMC,EAAW1H,EAAsBa,iB,MC+C3E+G,E,kDAjEX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACT8H,SAAU,GACVlG,OAAQ,IALG,E,qDAUnB,WAAoB,IAAD,OACfmG,EAAeC,cAAcjJ,MAAK,SAACC,GAC/B,EAAKkD,SAAS,CAAC4F,SAAU9I,EAAIG,UAGjCgD,EAAaf,YAAYrC,MAAK,SAAAC,GAC1B,EAAKkD,SAAS,CAACN,OAAQ5C,EAAIG,Y,8BAInC,SAAiBkB,GACb,IAAIiC,EAAe,GAMnB,OALA/B,KAAKP,MAAM4B,OAAOW,SAAQ,SAACvB,GACpBA,EAAMX,IAAMA,IACXiC,EAAetB,EAAMM,cAGtBgB,I,oBAIX,WAAU,IAAD,OACL,OACI,gCACI,oBAAI7D,UAAU,cAAd,yGACA,qBAAKA,UAAU,MAAf,SACI,wBAAOA,UAAU,qCAAjB,UACI,gCACI,+BACI,kFACA,oDACA,2EAIR,gCAEQ8B,KAAKP,MAAM8H,SAASzG,KAChB,SAAAuG,GAAO,OACP,qBAAuBzH,MAAS,CAACqC,OAAO,WAAxC,UACI,6BAAKoF,EAAQzG,OACb,6BAAKyG,EAAQvC,OACb,6BAAK,EAAKzC,iBAAiBgF,EAAQ7G,aAH5B6G,EAAQvH,qB,GAlDpB3B,aCgCpBuJ,MAvBf,WACE,OACE,8BACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKxJ,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyJ,KAAO,IAAIC,OAAK,EAACC,UAAWlB,IACnC,cAAC,IAAD,CAAOgB,KAAO,YAAYE,UAAW1G,IACrC,cAAC,IAAD,CAAOwG,KAAO,UAAUE,UAAWrC,IACnC,cAAC,IAAD,CAAOmC,KAAO,YAAYE,UAAWP,IACrC,cAAC,EAAD,CAAoBK,KAAO,mBAAmBE,UAAWvF,IACzD,cAAC,EAAD,CAAoBqF,KAAO,iBAAiBE,UAAWnD,IACvD,cAAC,IAAD,CAAOiD,KAAO,SAASC,OAAK,EAACC,UAAWlC,IACxC,cAAC,EAAD,CAAoBgC,KAAO,UAAUC,OAAK,EAACC,UAAWtB,SAG1D,cAAC,EAAD,UCnBKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxJ,MAAK,YAAkD,IAA/CyJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BX,M","file":"static/js/main.72307caa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return (\r\n        <div>\r\n            <footer className=\"footer\">\r\n            </footer>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/authenticate'\r\n\r\n\r\nclass AuthenticationService{\r\n\r\n    login(username, password){\r\n        return axios\r\n      .post(API_URL, {\r\n        username,\r\n        password\r\n      }).then(res => {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        return res.data;\r\n      }).catch(function(error){\r\n            return error.response.status;\r\n      });\r\n    }\r\n\r\n    getConfig(){\r\n        if(localStorage.getItem(\"token\") !== null)\r\n        return {headers:{'Authorization': 'Bearer ' + localStorage.getItem(\"token\")}};\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem(\"token\");\r\n        console.log(\"111\");\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let token = localStorage.getItem(\"token\");\r\n        if(token === null)\r\n        return false;\r\n        else return true;\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService();","import React, { Component } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    \r\n    logoutLink(){\r\n        if(AuthenticationService.isUserLoggedIn())\r\n        return <li style={{marginLeft:\"10px\"}}><a id=\"headerLink\" href=\"/logout\">Выйти</a></li>\r\n    }\r\n\r\n    loginLink(){\r\n        if(!AuthenticationService.isUserLoggedIn())\r\n        return <li style={{marginLeft:\"10px\"}}><a id=\"headerLink\" href=\"/login\">Войти</a></li>\r\n    }\r\n\r\n    createStudentLink(){\r\n        if(AuthenticationService.isUserLoggedIn())\r\n        return <li style={{marginLeft:\"10px\"}}><a id=\"headerLink\" href=\"/add-student/-1\">Добавить студента</a></li>;\r\n    }\r\n\r\n    createGroupLink(){\r\n        if(AuthenticationService.isUserLoggedIn())\r\n        return <li style={{marginLeft:\"10px\"}}><a id=\"headerLink\" href=\"/add-group/-1\">Добавить группу</a></li>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                <header>\r\n                    <div className=\"navbar navgab-expand-lg navbar-dark bg-success\">\r\n                        <div className=\"navbar-inner\">\r\n                            <a className=\"navbar-brand\" href=\"/\">Онлайн журнал</a>\r\n                        </div>\r\n                        <ul className=\"nav\">\r\n                            <li className=\"active\"><a id=\"headerLink\" href=\"/students\">Список студентов</a></li>\r\n                            <li style={{marginLeft:\"10px\"}}><a id=\"headerLink\" href=\"/groups\">Список групп</a></li>\r\n                            {this.createStudentLink()}\r\n                            {this.createGroupLink()}\r\n                            {this.loginLink()}\r\n                            {this.logoutLink()}\r\n                            <li></li>\r\n                        </ul>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import axios from 'axios';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst GROUP_API_BASE_URL = \"http://localhost:8080/api/groups\"\r\n\r\n\r\nclass GroupService{\r\n    getGroups(){\r\n        return axios.get(GROUP_API_BASE_URL, AuthenticationService.getConfig());\r\n    }\r\n\r\n    getGroupById(groupId){\r\n        return axios.get(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig());\r\n    }\r\n\r\n    createGroup(group){\r\n        return axios.post(GROUP_API_BASE_URL, group, AuthenticationService.getConfig());\r\n    }\r\n\r\n    updateGroup(group, groupId){\r\n        return axios.put(GROUP_API_BASE_URL + \"/\" + groupId, group, AuthenticationService.getConfig());\r\n    }\r\n\r\n    deleteGroup(groupId){\r\n        return axios.delete(GROUP_API_BASE_URL + \"/\" + groupId, AuthenticationService.getConfig());\r\n    }\r\n    \r\n    getGroupByName(name){\r\n        let groupList = this.getGroups();\r\n        groupList.map(group => {\r\n            if(group.groupName === name)\r\n                return group;\r\n            return '';\r\n        })\r\n    }\r\n}\r\n\r\nexport default new GroupService();","import axios from 'axios';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst STUDENT_API_BASE_URL = \"http://localhost:8080/api/students\"\r\n\r\n\r\nclass StudentService{\r\n    getStudents(){\r\n        return axios.get(STUDENT_API_BASE_URL, AuthenticationService.getConfig())\r\n        .catch(function(error){\r\n            return error.response.status;\r\n      });\r\n    }\r\n\r\n    getStudentsById(studentId){\r\n        return axios.get(STUDENT_API_BASE_URL + \"/\" + studentId, AuthenticationService.getConfig());\r\n    }\r\n\r\n    createStudent(student){\r\n        return axios.post(STUDENT_API_BASE_URL, student, AuthenticationService.getConfig())\r\n        .catch(function(error){\r\n            return error.response.status;\r\n      });\r\n    }\r\n\r\n    updateStudent(student, studentId){\r\n        return axios.put(STUDENT_API_BASE_URL + \"/\" + studentId, student, AuthenticationService.getConfig())\r\n        .catch(function(error){\r\n            return error.response.status;\r\n      });\r\n    }\r\n\r\n    deleteStudent(studentId){\r\n        return axios.delete(STUDENT_API_BASE_URL + \"/\" + studentId, AuthenticationService.getConfig())\r\n        .catch(function(error){\r\n            return error.response.status;\r\n      });\r\n    }\r\n\r\n}\r\n\r\nexport default new StudentService();","import React, { Component } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\nimport GroupService from '../services/GroupService';\r\nimport StudentService from '../services/StudentService';\r\n\r\nclass StudentListComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            students:[],\r\n            groups:[]\r\n        }\r\n        this.addStudent= this.addStudent.bind(this);\r\n        this.editStudent= this.editStudent.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        StudentService.getStudents().then((res) => {\r\n            this.setState({students: res.data});\r\n        });\r\n\r\n        GroupService.getGroups().then(res => {\r\n            this.setState({groups: res.data});\r\n        });\r\n    }\r\n\r\n\r\n    addStudent(){\r\n        this.props.history.push(\"/add-student/-1\");\r\n    }\r\n\r\n    editStudent(id){\r\n        this.props.history.push(`/add-student/${id}`);\r\n    }\r\n\r\n    getGroupNameById(id){\r\n        let currentGroup = '';\r\n        this.state.groups.forEach((group) => {\r\n            if(group.id == id){\r\n                currentGroup = group.groupName;\r\n            }\r\n        });\r\n        return currentGroup;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Список студентов</h2>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Имя</td>\r\n                                <td>Фамилия</td>\r\n                                <td>Группа</td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                this.state.students.map(\r\n                                    student =>\r\n                                    <tr key = {student.id} style = {{cursor:\"pointer\"}} onClick={this.editStudent.bind(this, student.id)}>\r\n                                        <td>{student.firstName}</td>\r\n                                        <td>{student.lastName}</td>\r\n                                        <td>{this.getGroupNameById(student.groupId)}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentListComponent;","import React, { Component } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\nimport GroupService from '../services/GroupService';\r\nimport StudentService from '../services/StudentService';\r\n\r\nclass CreateStudentComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            groupId: '',\r\n            groups: [],\r\n            incorrectStudentFirstName: false,\r\n            incorrectStudentLastName: false,\r\n            incorrectData: false\r\n        }\r\n\r\n\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeGroupHandler = this.changeGroupHandler.bind(this);\r\n        this.incorrectStudentFirstNameMessage = this.incorrectStudentFirstNameMessage.bind(this);\r\n        this.incorrectStudentLastNameMessage = this.incorrectStudentLastNameMessage.bind(this);\r\n        this.incorrectDataMessage = this.incorrectDataMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        GroupService.getGroups().then(res => {\r\n            this.setState({groups: res.data,\r\n                groupId: res.data[0].id});\r\n        });\r\n\r\n        if(this.state.id == -1){\r\n            return\r\n        }\r\n        else{\r\n            StudentService.getStudentsById(this.state.id).then((res) => {\r\n                let student = res.data;\r\n                this.setState({\r\n                    firstName: student.firstName,\r\n                    lastName: student.lastName,\r\n                    groupId: student.groupId\r\n                });\r\n            });\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    saveOrUpdateStudent = e =>{\r\n        e.preventDefault();\r\n        if(this.state.firstName == '' || this.state.lastName == ''){\r\n            this.setState({incorrectData: true});\r\n            return;\r\n        }\r\n        let student = {\r\n            firstName: this.state.firstName, \r\n            lastName: this.state.lastName, \r\n            groupId: this.state.groupId}\r\n        if(this.state.id == -1){\r\n            StudentService.createStudent(student).then(res =>{\r\n                this.props.history.push(\"/students\");\r\n            });\r\n        }\r\n        else{\r\n            StudentService.updateStudent(student, this.state.id).then(res => {\r\n                this.props.history.push(\"/students\");\r\n            });\r\n        }\r\n    }\r\n\r\n    changeFirstNameHandler = (event) =>{\r\n        let firstName = event.target.value;\r\n        this.setState({firstName: firstName});\r\n        if(firstName.length == 0)\r\n            this.setState({incorrectStudentFirstName: true});\r\n        else\r\n            this.setState({incorrectStudentFirstName: false});\r\n    }\r\n\r\n    changeLastNameHandler = (event) =>{\r\n        let lastName = event.target.value;\r\n        this.setState({lastName: lastName});\r\n        if(lastName.length == 0)\r\n            this.setState({incorrectStudentLastName: true});\r\n        else\r\n            this.setState({incorrectStudentLastName: false});\r\n    }\r\n\r\n    changeGroupHandler = (event) =>{\r\n        let newId = this.getGroupIdByName(event.target.value);\r\n        this.setState({groupId: newId});\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id == -1){\r\n            return <h3 className=\"text-center\">Добавить нового студента</h3>\r\n        }\r\n        else{\r\n            return <h3 className=\"text-center\">Обновить данные об студенте</h3>\r\n        } \r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/students');\r\n    }\r\n\r\n    getGroupIdByName(name){\r\n        let currentGroup = '';\r\n        this.state.groups.forEach((group) => {\r\n            if(group.groupName == name){\r\n                currentGroup = group.id;\r\n            }\r\n        });\r\n        return currentGroup;\r\n    }\r\n\r\n    getGroupList(){\r\n        let groups = [];\r\n        this.state.groups.forEach((group) => {\r\n            groups.push(<option key={group.id} value={group.groupName}>{group.groupName}</option>);\r\n        });\r\n        return groups;\r\n    }\r\n\r\n    deleteStudent(){\r\n        this.props.history.push(\"/students\");\r\n        StudentService.deleteStudent(this.state.id);\r\n        window.location.reload();\r\n    }\r\n\r\n    getDeleteButton(){\r\n        if(this.state.id != -1){\r\n            return  <button style = {{marginLeft:\"10px\"}} onClick={() => {this.deleteStudent()}} className=\"btn btn-danger\">Удалить</button>\r\n        }\r\n    }\r\n\r\n    incorrectStudentFirstNameMessage(){\r\n        if(this.state.incorrectStudentFirstName)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Некорректное имя</label></div>\r\n    }\r\n\r\n    incorrectStudentLastNameMessage(){\r\n        if(this.state.incorrectStudentLastName)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Некорректная фамилия</label></div>\r\n    }\r\n\r\n    incorrectDataMessage(){\r\n        if(this.state.incorrectData)\r\n        return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Некорректная информация о студенте</label></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {this.getTitle()}\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    {this.incorrectDataMessage()}\r\n                                    <div className=\"form-group\">\r\n                                        <label>Имя</label>\r\n                                        <input placeholder=\"Имя\" name=\"firstName\" className=\"form-control\"\r\n                                        value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                                        <label></label>\r\n                                        {this.incorrectStudentFirstNameMessage()}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Фамилия</label>\r\n                                        <input placeholder=\"Фамилия\" name=\"lastName\" className=\"form-control\"\r\n                                        value={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                                        <label></label>\r\n                                        {this.incorrectStudentLastNameMessage()}\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Группа</label>\r\n                                        <select name=\"group\" className=\"form-control\" onChange={this.changeGroupHandler}>\r\n                                            {this.getGroupList()}\r\n                                        </select>\r\n                                        <label></label>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateStudent}>Сохранить</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Отмена</button>\r\n                                    {this.getDeleteButton()}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateStudentComponent;","import React, { Component } from 'react';\r\nimport GroupService from '../services/GroupService';\r\n\r\nclass CreateGroupComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            groupId:this.props.match.params.id,\r\n            groupName:'',\r\n            year:'',\r\n            incorrectGroupYear: false,\r\n            incorrectGroupName: false,\r\n            incorrectData: false\r\n        }\r\n\r\n        this.saveOrUpdateGroup = this.saveOrUpdateGroup.bind(this);\r\n        this.changeGroupHandler = this.changeGroupHandler.bind(this);\r\n        this.changeYearHandler = this.changeYearHandler.bind(this);\r\n        this.incorrectGroupNameMessage = this.incorrectGroupNameMessage.bind(this);\r\n        this.incorrectGroupYearMessage = this.incorrectGroupYearMessage.bind(this);\r\n        this.incorrectDataMessage = this.incorrectDataMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let id = this.state.groupId;\r\n        if(id == -1){\r\n            return\r\n        }\r\n        else{\r\n            GroupService.getGroupById(id).then((res) => {\r\n                let group = res.data;\r\n                this.setState({\r\n                    groupName: group.groupName,\r\n                    year: group.groupYear\r\n                });\r\n            });\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    getTitle(){\r\n        if(this.state.groupId == -1){\r\n            return <h3 className=\"text-center\">Добавить новую группу</h3>\r\n        }\r\n        else{\r\n            return <h3 className=\"text-center\">Изменить группу</h3>\r\n        } \r\n    }\r\n\r\n    changeGroupHandler = (event) =>{\r\n        let groupName = event.target.value;\r\n        this.setState({groupName: groupName});\r\n        if(groupName.length == 0){\r\n            this.setState({incorrectGroupName: true});\r\n        }\r\n        else{\r\n            this.setState({incorrectGroupName: false});\r\n        }\r\n    }\r\n\r\n    \r\n    changeYearHandler = (event) =>{\r\n        let groupYear = event.target.value;\r\n        this.setState({year: groupYear});\r\n        if(groupYear.length == 0 || isNaN(groupYear)){\r\n            this.setState({incorrectGroupYear: true});\r\n        }\r\n        else{\r\n            this.setState({incorrectGroupYear: false});\r\n        }\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/groups');\r\n    }\r\n\r\n    saveOrUpdateGroup = e =>{\r\n        e.preventDefault();\r\n        if(this.state.groupName == '' || this.state.year == ''){\r\n            this.setState({incorrectData: true});\r\n            return;\r\n        }\r\n        let group = { \r\n            groupName: this.state.groupName,\r\n            groupYear: this.state.year\r\n        }\r\n        if(this.state.groupId == -1){\r\n            GroupService.createGroup(group).then(res =>{\r\n                this.props.history.push(\"/groups\");\r\n            });\r\n        }\r\n        else{\r\n            GroupService.updateGroup(group, this.state.groupId).then(res => {\r\n                this.props.history.push(\"/groups\");\r\n            });\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    deleteGroup(){\r\n        this.props.history.push(\"/groups\");\r\n        GroupService.deleteGroup(this.state.groupId);\r\n        window.location.reload();\r\n    }\r\n\r\n    getDeleteButton(){\r\n        if(this.state.groupId != -1){\r\n            return  <button style = {{marginLeft:\"10px\"}} onClick={() => {this.deleteGroup()}} className=\"btn btn-danger\">Удалить</button>\r\n        }\r\n    }\r\n\r\n\r\n    incorrectGroupYearMessage(){\r\n        if(this.state.incorrectGroupYear)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Некорректный год группы</label></div>\r\n    }\r\n\r\n    incorrectGroupNameMessage(){\r\n        if(this.state.incorrectGroupName)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Некорректное название группы</label></div>\r\n    }\r\n\r\n    incorrectDataMessage(){\r\n        if(this.state.incorrectData)\r\n        return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Некорректное название или год группы</label></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {this.getTitle()}\r\n                            <div className=\"card-body\">\r\n                            <form>\r\n                                    {this.incorrectDataMessage()}\r\n                                    <div className=\"form-group\">\r\n                                        <label>Группа</label>\r\n                                        <input placeholder=\"Группа\" name=\"group\" className=\"form-control\"\r\n                                        value={this.state.groupName} onChange={this.changeGroupHandler}/>\r\n                                        <label></label>\r\n                                        {this.incorrectGroupNameMessage()}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Год поступления</label>\r\n                                        <input placeholder=\"\" name=\"year\" className=\"form-control\"\r\n                                        value={this.state.year} onChange={this.changeYearHandler}/>\r\n                                        <label></label>\r\n                                        {this.incorrectGroupYearMessage()}\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateGroup}>Сохранить</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Отмена</button>\r\n                                    {this.getDeleteButton()}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateGroupComponent;","import React, { Component } from 'react';\r\nimport GroupService from '../services/GroupService';\r\n\r\nclass GroupListComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            groups:[]\r\n        }\r\n        this.addGroup= this.addGroup.bind(this);\r\n        this.editGroup= this.editGroup.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        GroupService.getGroups().then(res => {\r\n            this.setState({groups: res.data});\r\n        });\r\n    }\r\n\r\n\r\n    addGroup(){\r\n        this.props.history.push(\"/add-group/-1\");\r\n    }\r\n\r\n    editGroup(id){\r\n        this.props.history.push(`/add-group/${id}`);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Список групп</h2>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Группа</td>\r\n                                <td>Год поступления</td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                this.state.groups.map(\r\n                                    group =>\r\n                                    <tr key = {group.id} onClick={this.editGroup.bind(this, group.id)}>\r\n                                        <td>{group.groupName}</td>\r\n                                        <td>{group.groupYear}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupListComponent;","import React, { Component } from 'react';\r\nimport App from '../App';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nclass LogInComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            userNotFound: false,\r\n            incorrectUsername: false,\r\n            incorrectPassword: false\r\n        }\r\n\r\n        this.changeLoginHandler = this.changeLoginHandler.bind(this);\r\n        this.changePasswordHandler = this.changePasswordHandler.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.userNotFoundMessage = this.userNotFoundMessage.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    changeLoginHandler = (event) =>{\r\n        let username = event.target.value;\r\n        this.setState({username: username, userNotFound:false});\r\n        if(username.length < 4 && username.length > 0)\r\n            this.setState({incorrectUsername:true});\r\n        else\r\n            this.setState({incorrectUsername:false});\r\n    }\r\n    \r\n    changePasswordHandler = (event) =>{\r\n        let password = event.target.value;\r\n        this.setState({password: password, userNotFound:false});\r\n        if(password.length < 4 && password.length > 0)\r\n            this.setState({incorrectPassword:true});\r\n        else\r\n            this.setState({incorrectPassword:false});\r\n    }\r\n\r\n    login = e =>{\r\n        e.preventDefault();\r\n        let login = AuthenticationService.login(this.state.username, this.state.password);\r\n        login.then(res => {\r\n            if(res == 401)\r\n                this.setState({userNotFound: true});\r\n            if(this.state.userNotFound == false){\r\n                this.props.history.push('/');\r\n                document.location.reload();\r\n            }\r\n        });\r\n    }\r\n\r\n    userNotFoundMessage(){\r\n        if(this.state.userNotFound)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Не правильное имя пользователя или пароль</label></div>\r\n    }\r\n\r\n    incorrectUsernameMessage(){\r\n        if(this.state.incorrectUsername)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Слишком маленькое имя пользователя</label></div>\r\n    }\r\n\r\n    incorrectPasswordMessage(){\r\n        if(this.state.incorrectPassword)\r\n            return <div className=\"form-group\"  style={{backgroundColor:\"RGBA(250, 0, 0,.7)\", borderRadius:6}}><label style={{marginLeft:12}}>Слишком маленький пароль</label></div>\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Войти</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    {this.userNotFoundMessage()}\r\n                                    <div className=\"form-group\">\r\n                                        <label>Логин</label>\r\n                                        <input placeholder=\"Логин\" name=\"login\" className=\"form-control\"\r\n                                        value={this.state.login} onChange={this.changeLoginHandler}/>\r\n                                    </div>\r\n                                    {this.incorrectUsernameMessage()}\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Пароль</label>\r\n                                        <input type = \"password\" placeholder=\"Пароль\" name=\"password\" className=\"form-control\"\r\n                                        value={this.state.password} onChange={this.changePasswordHandler}/>\r\n                                    </div>\r\n                                    {this.incorrectPasswordMessage()}\r\n\r\n                                    <button className=\"btn btn-success\" onClick={this.login}>Войти</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Отмена</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogInComponent;","import React, { Component } from 'react'\nimport AuthenticationService from '../services/AuthenticationService';\n\nclass LogoutComponent extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n        }\n\n        this.logout = this.logout.bind(this);\n    }\n\n    logout(){\n        AuthenticationService.logout();\n        this.props.history.push('/');\n        document.location.reload();\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n                            <h3 className=\"text-center\">Выйти</h3>\n                            <div className=\"card-body\">\n                                <h2>Вы уверены что хотите выйти</h2>\n                                <form>\n                                    <div className=\"text-center\">\n                                        <button className=\"btn btn-success\" onClick={this.logout}>Выйти</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default LogoutComponent","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport AuthenticationService from '../services/AuthenticationService'\n\nclass AuthenticatedRoute extends Component {\n    render() {\n        if (AuthenticationService.isUserLoggedIn()) {\n            return <Route {...this.props} />\n        } else {\n            return <Redirect to=\"/login\" />\n        }\n\n    }\n}\n\nexport default AuthenticatedRoute","import React, { Component } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\n\r\nclass MenuComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.redirectGroups = this.redirectGroups.bind(this);\r\n        this.redirectJournal = this.redirectJournal.bind(this);\r\n        this.redirectStudents = this.redirectStudents.bind(this);\r\n        this.redirectAddStudent = this.redirectAddStudent.bind(this);\r\n        this.redirectAddGroup = this.redirectAddGroup.bind(this);\r\n    }\r\n\r\n\r\n    redirectStudents(){\r\n        this.props.history.push(\"/students\");\r\n    }\r\n\r\n    redirectAddStudent(){\r\n        this.props.history.push(\"/add-student/-1\");\r\n    }\r\n\r\n    redirectGroups(){\r\n        this.props.history.push(\"/groups\");\r\n    }\r\n\r\n    redirectAddGroup(){\r\n        this.props.history.push(\"/add-group/-1\");\r\n    }\r\n\r\n    redirectJournal(){\r\n        this.props.history.push(\"/journals\");\r\n    }\r\n\r\n    createAddStudentButton(){\r\n        if(AuthenticationService.isUserLoggedIn())\r\n            return <div className=\"mb-3\"><button id=\"menuButton\" onClick={this.redirectAddStudent}>Создать студента</button></div>\r\n    }\r\n\r\n    createAddGroupButton(){\r\n        if(AuthenticationService.isUserLoggedIn())\r\n            return <div className=\"mb-3\"><button id=\"menuButton\" onClick={this.redirectAddGroup}>Создать группу</button></div>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <div className=\"my-5 px-4 py-3\" id=\"menuContent\">\r\n                   <div className=\"mb-3\"><button id=\"menuButton\" onClick={this.redirectJournal}>Список журналов</button></div>\r\n                   <div className=\"mb-3\"><button id=\"menuButton\" onClick={this.redirectStudents}>Список студентов</button></div>\r\n                   <div className=\"mb-3\"><button id=\"menuButton\" onClick={this.redirectGroups}>Список групп</button></div>\r\n                   {this.createAddStudentButton()}\r\n                   {this.createAddGroupButton()}\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MenuComponent;","import axios from 'axios';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst JOURNAL_API_BASE_URL = \"http://localhost:8080/api/journals\"\r\n\r\n\r\nclass JournalService{\r\n    getJournals(){\r\n        return axios.get(JOURNAL_API_BASE_URL, AuthenticationService.getConfig());\r\n    }\r\n\r\n    getJournalsById(journalId){\r\n        return axios.get(JOURNAL_API_BASE_URL + \"/\" + journalId, AuthenticationService.getConfig());\r\n    }\r\n\r\n    createJournal(journal){\r\n        return axios.post(JOURNAL_API_BASE_URL, journal, AuthenticationService.getConfig());\r\n    }\r\n\r\n    updateJournal(journal, journalId){\r\n        return axios.put(JOURNAL_API_BASE_URL + \"/\" + journalId, journal, AuthenticationService.getConfig());\r\n    }\r\n\r\n    deleteJournal(journalId){\r\n        return axios.delete(JOURNAL_API_BASE_URL + \"/\" + journalId, AuthenticationService.getConfig());\r\n    }\r\n\r\n}\r\n\r\nexport default new JournalService();","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport JournalService from '../services/JournalService';\r\nimport GroupService from '../services/GroupService';\r\n\r\nclass JournalListComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            journals: [],\r\n            groups: []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        JournalService.getJournals().then((res) => {\r\n            this.setState({journals: res.data});\r\n        });\r\n\r\n        GroupService.getGroups().then(res => {\r\n            this.setState({groups: res.data});\r\n        });\r\n    }\r\n\r\n    getGroupNameById(id){\r\n        let currentGroup = '';\r\n        this.state.groups.forEach((group) => {\r\n            if(group.id == id){\r\n                currentGroup = group.groupName;\r\n            }\r\n        });\r\n        return currentGroup;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Список студентов</h2>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>Предмент</td>\r\n                                <td>Год</td>\r\n                                <td>Группа</td>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                this.state.journals.map(\r\n                                    journal =>\r\n                                    <tr key = {journal.id} style = {{cursor:\"pointer\"}}>\r\n                                        <td>{journal.name}</td>\r\n                                        <td>{journal.year}</td>\r\n                                        <td>{this.getGroupNameById(journal.groupId)}</td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default JournalListComponent;","import './App.css';\nimport FooterComponent from './components/FooterComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport StudentListComponent from './components/StudentListComponent';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport CreateStudentComponent from './components/CreateStudentComponent';\nimport CreateGroupComponent from './components/CreateGroupComponent';\nimport GroupListComponent from './components/GroupListComponent';\nimport LogInComponent from './components/LogInComponent';\nimport LogoutComponent from './components/LogoutComponent';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport MenuComponent from './components/MenuComponent';\nimport JournalListComponent from './components/JournalListComponent';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n          <HeaderComponent/>\n          <div className=\"container\">\n            <Switch>\n              <Route path = \"/\" exact component={MenuComponent}></Route>\n              <Route path = \"/students\" component={StudentListComponent}></Route>\n              <Route path = \"/groups\" component={GroupListComponent}/>\n              <Route path = \"/journals\" component={JournalListComponent}/>\n              <AuthenticatedRoute path = \"/add-student/:id\" component={CreateStudentComponent}/>\n              <AuthenticatedRoute path = \"/add-group/:id\" component={CreateGroupComponent}/>\n              <Route path = \"/login\" exact component={LogInComponent}/>\n              <AuthenticatedRoute path = \"/logout\" exact component={LogoutComponent} />\n            </Switch>\n          </div>\n          <FooterComponent/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}